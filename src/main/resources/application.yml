server:
  address: 127.0.0.1
  port: 8081

spring:
  #  profiles: development
  thymeleaf:
    # 模板文件的路径
    prefix: /WEB-INF/templates/
    # 模板文件的结尾
    suffix: .html
    # 模板文件的解析模式（默认：HTML）
    templateMode: HTML
    # Content-Type value written to HTTP responses.
    servlet.content-type: text/html
    # 模板文件编码
    encoding: utf-8
    # 是否开启缓存
    cache: false

  # 配置 ANSI 输出一直为彩色
  output:
    ansi:
      # 可选值：ALWAYS（显示）、DETECT（尝试检测 - 默认）、NEVER（关闭）
      enabled: ALWAYS

# 自定义一个变量
project_var: project_var_1

logging:
  # 自定义日志分组，可以根据分组指定日志级别
  group:
    zhqy: com.zhqy.springboot.config, com.zhqy.springboot.controller
  # 这里指定级别后，会覆盖 logback-spring.xml 中对应的级别
  level:
    root: info
    zhqy: debug
  pattern:
    # 自定义console输出的日志格式。
    # 着色语法：%clr(%5p) 或 %clr(${PID:- }){magenta}
    # - 所有支持的颜色：blue、cyan、faint、green、magenta、red、yellow
    # - %clr(%5p)：根据5个级别显示不同的颜色。FATAL：red、ERROR：red、WARN：yellow、INFO：green、DEBUG：green、TRACE：green
    # - %clr(${PID:- }){magenta} 将PID显示为：magenta（品红）颜色
    # 下面解释每一个含义（按空格区分每一个独立的配置）
    # springboot的文档中有基础介绍：https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging-format
    # logback官方文档中有详细介绍如何按长度截断字符串，例如 %5p 中的 5 的含义：Chapter 6: Layouts（http://logback.qos.ch/manual/layouts.html#formatModifiers）
    # - %d{yyyy-MM-dd HH:mm:ss.SSS}：%d是日期，{}中的内容标识将格式化为：yyyy-MM-dd HH:mm:ss.SSS
    # - %5p：%p日志级别：FATAL、ERROR、WARN、INFO、DEBUG、TRACE，5代表右对齐，如果不够5个字符，左边填充空格
    # - ${PID:- }：Process ID。可以通过 ${} 的语法取变量值
    # - ---：只是用来分割一下，右侧是实际的日志内容
    # - [%15.15t]：[]是外部的框，%t是线程名。15.15表示右对其，左边的15代表小于15的字符，左边填充空格；右边的15代表最多15个字符，超过15从开始处（左边）截断（这里可能被控制台截断）
    # - %-40.40logger{39}：
    #   - %logger是类名，
    #   - {39}表示最长39超过后按照规则截断，如果类全名超过长度限制则优先显示每一级报名，然后依次从右向左显示全名。具体解释详见官方文档：http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout
    #   - 40表示左对齐，不够40则在右侧填充空格；
    #   - 40代表最多40个字符，超过40从开始处截断（左边），想要从右边截断，需要改成 -40.-40。
    # - %m：具体消息
    # - %n：换行符
    # - %wEx：springboot 自己实现的异常输出：在异常前后各加一个空行，详见：org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter
#     console（默认）: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
#    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-100.100logger{99}){cyan} %clr(:){faint} %m%n%wEx"

    # 配置文件输出格式
    # - project_name，在 logback-spring.xml 中配置：<property name="project_name" value="springboot-thymeleaf" />，不可配置默认值，否则无法读取在 logback-spring.xml 中的变量
    # - HOSTNAME，读取系统的变量
    # - %hostIp，读取自定义的变量"hostIp"。
    #   - 在 logback-spring.xml 中配置：<conversionRule conversionWord="hostIp" converterClass="com.zhqy.springboot.config.log.LogIpConverter" />
    #   - com.zhqy.springboot.config.log.LogIpConverter 是自定义的逻辑，继承了 ClassicConverter
    # - project_var:default
    #   - project_var，读取配置文件中的变量
    #   - :，表示如果没有读取到变量 project_var 的值，则显示 default（本配置文件中用:分割变量和默认值；logback-spring.xml中用:-区分）
    file: "${project_name} ${project_var:default} %hostIp ${HOSTNAME} %d{yyyy-MM-dd HH:mm:ss.SSS} %5p %-40.40logger{39}:%-4L - %m%n%wEx"
  file:
    # 将日志输出到下面配置的绝对路径，其他的配置可以从springboot文档中查看：https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-custom-log-configuration
    name: /opt/logs/springboot_thymeleaf.log
    # 默认配置下，有 name 存在时，这个不生效
    path: /opt/logs/aaa/
    # --- 启动时清除存档日志文件（没有成功）
    clean-history-on-start: false
    # 最大的日志文件，超出后自动归档，默认单位：字节，可以指定单位：kb|mb|gb
    max-size: 10mb
    # 最大的归档日志文件，超出后自动删除，单位：天
    max-history: 2
    # 保留的日志文件总大小，按时间从旧的开始删除，默认单位：字节，可以指定单位：kb|mb|gb
    total-size-cap: 500mb